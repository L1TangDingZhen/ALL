server {
    listen 80;
    server_name _;

    # 根路径 - Student 项目前端
    location = / {
        root /usr/share/nginx/html;
        index index.html;
    }

    # 测试页面 - 移至/test路径
    location = /test {
        root /usr/share/nginx/html;
        try_files /test.html =404;
    }

    # Student 项目子路径
    location ~ ^/(?!box|p2p|api|swagger|p2phub|test)(.*)$ {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    # Box 项目主页
    location = /box {
        return 301 /box/;
    }

    location = /box/ {
        alias /usr/share/nginx/html/box/;
        try_files index.html =404;
    }

    # Box 项目路径
    location /box/ {
        alias /usr/share/nginx/html/box/;
        try_files $uri $uri/ /box/index.html;
    }

    # P2P 项目主页
    location = /p2p {
        return 301 /p2p/;
    }

    location = /p2p/ {
        alias /usr/share/nginx/html/p2p/;
        try_files index.html =404;
    }

    # P2P 项目路径
    location /p2p/ {
        alias /usr/share/nginx/html/p2p/;
        try_files $uri $uri/ /p2p/index.html;

        # 添加CSP策略以支持Web Worker
        add_header Content-Security-Policy "default-src * 'self' 'unsafe-inline' 'unsafe-eval'; connect-src * 'self' wss: ws:; script-src * 'self' 'unsafe-inline' 'unsafe-eval'; worker-src 'self' blob:; child-src 'self' blob:; style-src * 'self' 'unsafe-inline'; font-src * 'self'; img-src * 'self' data: blob:;" always;
    }

    # Box 静态资源
    location ~ ^/box/static/(.*)$ {
        alias /usr/share/nginx/html/box/static/$1;
    }

    # Box 静态文件
    location ~ ^/box/(manifest.json|logo192.png|logo512.png|1.ico|favicon.ico)$ {
        alias /usr/share/nginx/html/box/$1;
    }

    # P2P 静态资源
    location ~ ^/p2p/static/(.*)$ {
        alias /usr/share/nginx/html/p2p/static/$1;
    }

    # P2P 静态文件
    location ~ ^/p2p/(manifest.json|logo192.png|logo512.png|favicon.ico)$ {
        alias /usr/share/nginx/html/p2p/$1;
    }

    # Student 静态资源
    location ~ ^/assets/(.*)$ {
        alias /usr/share/nginx/html/assets/$1;
    }

    # Student 静态文件
    location ~ ^/(manifest.json|favicon.ico)$ {
        root /usr/share/nginx/html;
    }

    # Student API转发
    location /api/student/ {
        proxy_pass http://student-backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS配置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Box API转发
    location /api/box/ {
        # Django项目的URL路径应该保留 /api/ 前缀
        proxy_pass http://box-backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS配置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # P2P API转发 (前端将使用/api/p2p的路径)
    location /api/p2p/ {
        proxy_pass http://p2p-backend:5235/api/p2p/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS配置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        
        # 处理OPTIONS请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # P2P WebSocket连接
    location /p2phub {
        proxy_pass http://p2p-backend:5235/p2phub;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Box Swagger - 修复路径映射
    location /swagger/box/ {
        # 将 /swagger/box/ 转发到 box-backend:8000/swagger/
        proxy_pass http://box-backend:8000/swagger/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Student Swagger
    location /swagger/student/ {
        proxy_pass http://student-backend:8000/swagger/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}